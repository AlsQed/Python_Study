#   闭包函数：声明在一个函数中的函数，叫做闭包函数。
#
#   闭包：内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。
#
#   让外部访问函数内部变量成为可能；
#
#   局部变量会常驻在内存中；
#
#   可以避免使用全局变量，防止全局变量污染；
#
#   会造成内存泄漏（有一块内存空间被长期占用，而不被释放）


# 条件:
# 1.外部函数中定义了内部函数
# 2.外部函教是有返回值
# 3.返回的值是:内部函数名
# 4.内部函数引用外部函数的变量

def func1() :
    a = 100

    # 局部变量

    def inner_func1() :
        b = 99
        # 内部局部变量

        print(a , b)

    print(locals())

    return inner_func1
    # 返回函数inner
    # 不可加()!!!


x = func1()
# 将变量本身赋给x
print(x)

x()

# 在x后加上()来调用以实现在外部调用函数内部函数


